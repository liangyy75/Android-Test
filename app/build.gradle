apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.greenrobot.greendao' // apply plugin

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.liang.example.androidtest"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.res.srcDirs = [
                'src/main/res',
                'src/main/test-fragment',
                'src/main/test-recyclerview',
                'src/main/test-handler',
                'src/main/test-androidfix',
                'src/main/test-apt',
                'src/main/test-volley',
                'src/main/test-shell',
                'src/main/test-music',
                'src/main/test-view',
        ]
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'com.google.android.material:material:1.1.0-alpha10'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    implementation 'org.greenrobot:greendao:3.2.2' // add library
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.squareup.okhttp3:okhttp:4.2.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.2.0'

    implementation 'com.google.firebase:firebase-messaging:20.0.0'

    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "com.jakewharton:butterknife:10.1.0"
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    api 'com.google.dagger:dagger:2.24'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.24'

    api project(":utils")
    api project(":remote")
    api project(":lib")
    annotationProcessor project(":lib")
    api project(":spi_impl2")
    api project(":spi_impl1")
    api project(":spi_interface")
    // 不需要的时候就没有这个实现了，当然还要在app模块的resources/META-INF/services里面的com.liang.example.spi_interface.SpiDisplay，而且需要注意ServiceLoader的reload方法

    // api 'com.alibaba:arouter-api:1.4.0'
    // annotationProcessor 'com.alibaba:arouter-compiler:1.2.1'
}
