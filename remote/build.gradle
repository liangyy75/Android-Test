apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        // ndk {
        //     moduleName "remote-jni"
        //     // stl "c++_shared"
        //     abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        //     ldLibs "log", "z", "m"
        // }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        // externalNativeBuild {
        //     ndkBuild {
        //         path 'src/main/jni/Android.mk'
        //     }
        // }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    sourceSets.main {
        jni.srcDirs = ['src/main/jni/']
        jniLibs.srcDirs = ['src/main/jniLibs/']
    }
    externalNativeBuild {
        // ndkBuild {
        //     path file('src/main/jni/Android.mk')
        // }
        cmake {
            path "src/main/jni/CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    api 'org.java-websocket:Java-WebSocket:1.4.0'
    api 'com.google.code.gson:gson:2.8.5'

    // api project(":utils")  // 添加了ndk后就这样了，无法添加这个
}
